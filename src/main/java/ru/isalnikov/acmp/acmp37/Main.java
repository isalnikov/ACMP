package ru.isalnikov.acmp.acmp37;

/**
 * Оператором А, действующим из множества Х в множество Y (или просто оператором
 * из X в Y) называется правило, согласно которому каждому элементу x множества
 * X сопоставляется элемент y=Ax из множества Y. Пусть X и Y – множества точек
 * на плоскости. Оператор A из X в Y называется сжимающим с коэффициентом q, где
 * q – вещественное число из полуинтервала [0, 1), если для любого x из X
 * выполнено ||Ax|| ≤ q*||x|| (здесь ||x|| - норма точки x – расстояние от x до
 * начала координат). Проще говоря, оператор называется сжимающим с
 * коэффициентом q если он сопоставляет каждой точке точку, которая не менее,
 * чем в q раз ближе к началу координат.
 *
 * Для заданного оператора А требуется проверить является ли он сжимающим с
 * коэффициентом q.
 *
 * Входные данные
 *
 * Первая строка входного файла INPUT.TXT содержит количество точек n (1 ≤ n ≤
 * 100) и число q (0 ≤ q < 1), заданное не более чем с 3 знаками после
 * десятичной точки. Следующие n строк содержат по 4 целых числа, по модулю не
 * превосходящих 1000, разделенные пробелами – координаты точки множества X и
 * сопоставленной ей точки из множества Y.
 *
 *
 */
import java.io.*;
import java.util.*;

class Main {

    public static void main(String[] args) {
        try (Scanner in = new Scanner(System.in);
                PrintWriter out = new PrintWriter(System.out)) {

            int n = in.nextInt();
            double q = Double.parseDouble(in.next());

            for (int i = 0; i < n; i++) {
                int x1 = in.nextInt();
                int y1 = in.nextInt();
                int x2 = in.nextInt();
                int y2 = in.nextInt();

                if (Math.sqrt(x1 * x1 + y1 * y1) * q + 1e-9
                        < Math.sqrt(x2 * x2 + y2 * y2)) {

                    out.print("No");
                    out.flush();
                    return;
                }
            }
            out.print("Yes");
            out.flush();
        }
    }

}

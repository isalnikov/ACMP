package ru.isalnikov.acmp.acmp233;

/**
 * Оргкомитет Московской городской олимпиады решил организовать обзорную
 * экскурсию по Москве для участников олимпиады. Для этого был заказан
 * двухэтажный автобус (участников олимпиады достаточно много и в обычный они не
 * умещаются) высотой 437 сантиметров. На экскурсионном маршруте встречаются N
 * мостов. Жюри и оргкомитет олимпиады очень обеспокоены тем, что высокий
 * двухэтажный автобус может не проехать под одним из них. Им удалось выяснить
 * точную высоту каждого из мостов. Автобус может проехать под мостом тогда и
 * только тогда, когда высота моста превосходит высоту автобуса.
 *
 * Помогите организаторам узнать, закончится ли экскурсия благополучно, а если
 * нет, то установить, где произойдет авария.
 *
 * Входные данные
 *
 * Во входном файле INPUT.TXT сначала содержится число N (1<=N<=1000). Далее
 * идут N натуральных чисел, не превосходящих 10000 - высоты мостов в
 * сантиметрах в том порядке, в котором они встречаются на пути автобуса.
 *
 * Выходные данные
 *
 * В единственную строку выходного файла OUTPUT.TXT нужно вывести фразу "No
 * crash", если экскурсия закончится благополучно. Если же произойдет авария, то
 * нужно вывести сообщение "Crash k", где k - номер моста, где произойдет
 * авария. Фразы выводить без кавычек ровно с одним пробелом внутри.
 */
import java.io.PrintWriter;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        try (Scanner in = new Scanner(System.in);
                PrintWriter out = new PrintWriter(System.out)) {
            solve(in, out);
        }
    }

    private static void solve(Scanner in, PrintWriter out) {
        int N = in.nextInt();

        for (int i = 0; i < N; i++) {
            if (in.nextInt() <= 437) {
                out.print("Crash " + (i + 1));
                out.flush();
                return;
            }
        }

        out.print("No crash");
        out.flush();
    }
}

package ru.isalnikov.acmp.acmp24;

/**
 * Король Флатландии решил вырубить некоторые деревья, растущие перед его
 * дворцом. Деревья перед дворцом короля посажены в ряд, всего там растет n
 * деревьев, расстояния между соседними деревьями одинаковы. После вырубки перед
 * дворцом должно остаться m деревьев, и расстояния между соседними деревьями
 * должны быть одинаковыми. Помогите королю выяснить, сколько существует
 * способов вырубки деревьев. Требуется написать программу, которая по заданным
 * числам n и m определит, сколько существует способов вырубки некоторых из n
 * деревьев так, чтобы после вырубки осталось m деревьев и соседние деревья
 * находились на равном расстоянии друг от друга.
 *
 * Входные данные
 *
 * Входной файл INPUT.TXT содержит два целых числа n и m (0 ≤ m , n ≤ 1000).
 *
 * Если обозначить условно исходное расположение деревьев перед дворцом как
 * «TTTTT», то возможные результаты после вырубки следующие:
 *
 * «TTT..», «.TTT.», «..TTT», «T.T.T».
 */
import java.io.PrintWriter;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        try (Scanner in = new Scanner(System.in);
                PrintWriter out = new PrintWriter(System.out)) {
            solve(in, out);
        }
    }

    private static void solve(Scanner in, PrintWriter out) {
        int n = in.nextInt();
        int m = in.nextInt();
        int sum = 0;

        if (n > m && m != 1 && m != 0) {
            int k = n / (m - 1);

            for (int i = 1; i <= k; i++) {
                sum += n - i * (m - 1);
            }
        } else if (n > m && m == 1) {
            sum = n;
        } else if (n == m || m == 0) {
            sum = 1;
        }
        out.print(sum);
        out.flush();
    }
}

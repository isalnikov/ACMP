package ru.isalnikov.acmp.acmp294;

/**
 * Вновь созданная фирма купила заброшенные склады на окраине города. Новому
 * заведующему складами поручили произвести учёт в короткие сроки. Всё шло
 * хорошо, пока случайно не рассыпали контейнеры с болтами и гайками на каждом
 * складе, после чего собрали их в общие (для болтов и гаек) контейнеры, потеряв
 * при этом несколько деталей.
 *
 * Помогите оценить нанесённый ущерб на каждом складе, приняв во внимание, что,
 * помимо потерянных деталей, болт (или гайка) считается непригодным, если он не
 * имеет соответствующей гайки (или болта).
 *
 * Входные данные
 *
 * Во входном файле INPUT.TXT описано текущее положение на складе. В первой
 * строке через пробел записаны три целых числа: k1, l1, m1 – начальное число
 * болтов (100<=k1<=30000, k1 кратно 100), процент потерянных деталей
 * (0<=l1<=100) и стоимость одного болта (1<=m1<=100) соответственно. Во второй
 * строке через пробел записаны также три целых числа: k2, l2, m2 – начальное
 * число гаек (100<=k2<=30000, k2 кратно 100), процент потерянных деталей
 * (0<=l2<=100) и стоимость одной гайки (1<=m2<=100) соответственно.
 */
import java.io.PrintWriter;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        try (Scanner in = new Scanner(System.in);
                PrintWriter out = new PrintWriter(System.out)) {
            solve(in, out);
        }
    }

    private static void solve(Scanner in, PrintWriter out) {
        long k1 = in.nextLong();
        long l1 = in.nextLong();
        long m1 = in.nextLong();

        long k2 = in.nextLong();
        long l2 = in.nextLong();
        long m2 = in.nextLong();
        // полная стоимость до потери 
        long totalCost = k1*m1 + k2*m2;
        //long lost = k1*(100-l1)/100 ; k2*(100-l2)/100;
        long pairs = Math.min(k1*(100-l1)/100, k2*(100-l2)/100);
        //  количество болтов и гаек до потери 
        
        long costAfterLost = pairs*m1 + pairs*m2;
        out.print(totalCost - costAfterLost);

        out.flush();
    }
}
